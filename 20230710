9조

이상훈, 박준수, 박용석, 남경화, 박준범 이하 5명

팀장 박준수

1. 개발자는 Git과 Github을 도대체 왜 사용하는가?

Git이란?

어려운 개발 말고 일상 생활 예시를 살펴보자.

- 레포트, 과제 등을 제출할 때 깔끔하게 딱 하나의 파일을 만들었나?
- 막상 제출할 때가 되니 수정할 것들이 보이고, 수정하다 망치면 안되니 백업본 만들어 놓으신 적 있나? 

그런데 위와 같은 방법의 문제점?!

1. 저장해야 할 파일이 많아지고 지저분해진다.
2. 각 파일마다 어떤 변경점이 있는지 명확히 확인이 안된다. 
- 그래서 개발자 중에 코드를 잘 관리할 수 있는 프로그램을 하나 만들었다.
    - 리눅스 토발즈 
        - 리눅스 운영체제 개발자
        - git 프로그램도 무료 배포자.

코드의 변경점을 기록하기 위해 git을 사용한다.  

1. 기능을 개발하면서 코드 변경점을 “기록”할 수 있습니다. 
2. 문제가 생겼을 때 특정 지점으로 되돌아 가는 것이 쉽습니다. 

⇒ 이러한 특징 때문에 git을 버전 관리 도구라고 한다.

Github이란?

일상 생활 예시를 들어봅시다.

- 여러분의 레포트를 저장한 컴퓨터가 고장이 났다.
    
    ⇒ 다시 레포트 만들어야 한다.
    
- 이런 상황을 방지(백업)하기 위해 드라이브, 클라우드 등을 사용하기도 한다.
- 드라이브에 파일을 저장하면 함께 일하는 팀원에게도 쉽게 공유 가능하다.
- github도 마찬가지로 온라인 코드 저장소이다.

### github 사용의 장점

1. 내 코드를 **온라인 저장소에 백업**을 할 수 있습니다.
2. 팀원들과 협업할 때 내 **코드를 공유**할 수 있습니다.
3. **함께 작업이 가능**합니다


### Quiz : Git과 Github은 왜 사용할까요?

1. git: 버전 관리 도구
    - 코드 변경점 기록
2. github: 온라인 저장소 
    - 내 코드를 온라인에 백업하거나 다른 사람과 협업하는 도구


# 알아야할 Git 명령어 리스트

Git은 **코드를 기록하는 것**이라고 했습니다. (**버전 관리**)

코드 기록을 위해 여러분은 **Git의 명령어를 알아야 합니다.** 

여러분이 알아야 할 명령어들은 다음과 같습니다. 

(물론 명령어는 정말 많지만 이 정도만 알면 협업에 큰 문제는 없습니다)

1. `git init`
2. `git add <파일명>`  혹은 `git add .`
3. `git commit -m "기능 개발과 관련된 기록"`
4. `git log`
5. `git status`
6. `git branch`
7. `git switch <브랜치명>` 혹은 `git checkout <브랜치명>`
8. `git merge`
9. `git stash`
